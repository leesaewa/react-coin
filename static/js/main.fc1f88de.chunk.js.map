{"version":3,"sources":["routes/Price.tsx","api.ts","routes/Chart.tsx","routes/Coin.tsx","routes/Coins.tsx","Router.tsx","App.tsx","index.tsx","theme.ts"],"names":["Container","styled","div","Loader","Overview","ul","OverviewItem","li","Price","coinId","useState","data","setData","loading","setLoading","useEffect","BASE_URL","fetchCoins","fetch","then","response","json","Chart","useQuery","endDate","Math","floor","Date","now","startDate","fetchCoinHistory","refetchInterval","isLoading","type","series","name","map","price","parseFloat","close","options","theme","mode","chart","height","width","toolbar","show","background","stroke","curve","grid","yaxis","xaxis","labels","axisTicks","axisBorder","categories","time_close","fill","gradient","gradientToColors","stops","colors","tooltip","y","formatter","value","toFixed","Header","header","Title","h1","props","accentColor","textColor","Description","p","Tabs","Tab","isActive","Coin","useParams","state","useLocation","priceMatch","useRouteMatch","chartMatch","fetchCoinInfo","infoLoading","infoData","fetchCoinTickers","tickersLoading","tickersData","Helmet","rank","symbol","quotes","USD","description","total_supply","max_supply","to","path","CoinsList","bgColor","Img","img","Coins","slice","coin","pathname","id","src","toLowerCase","Router","GlobalStyle","createGlobalStyle","App","initialIsOpen","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"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","file":"static/js/main.fc1f88de.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 10px;\r\n  margin: 0 auto;\r\n  max-width: 480px;\r\n`;\r\n\r\nconst Loader = styled.div`\r\n  text-align: center;\r\n`;\r\n\r\nconst Overview = styled.ul`\r\n  border: 1px solid red;\r\n`;\r\n\r\nconst OverviewItem = styled.li`\r\n  background-color: aliceblue;\r\n  color: #000;\r\n`;\r\n\r\ninterface PriceData {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  circulating_supply: number;\r\n  total_supply: number;\r\n  max_supply: number;\r\n  beta_value: number;\r\n  first_data_at: string;\r\n  last_updated: string;\r\n  quotes: {\r\n    USD: {\r\n      ath_date: string;\r\n      ath_price: number;\r\n      market_cap: number;\r\n      market_cap_change_24h: number;\r\n      percent_change_1h: number;\r\n      percent_change_1y: number;\r\n      percent_change_6h: number;\r\n      percent_change_7d: number;\r\n      percent_change_12h: number;\r\n      percent_change_15m: number;\r\n      percent_change_24h: number;\r\n      percent_change_30d: number;\r\n      percent_change_30m: number;\r\n      percent_from_price_ath: number;\r\n      price: number;\r\n      volume_24h: number;\r\n      volume_24h_change_24h: number;\r\n    };\r\n  };\r\n}\r\n\r\ninterface PriceProps {\r\n  coinId: string;\r\n}\r\n\r\nfunction Price({ coinId }: PriceProps) {\r\n  const [data, setData] = useState<PriceData>();\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setData(data);\r\n    setLoading(false);\r\n  }, [coinId]);\r\n\r\n  return (\r\n    <Container>\r\n      {loading ? (\r\n        <Loader>Loading...</Loader>\r\n      ) : (\r\n        <>\r\n          <Overview>\r\n            <OverviewItem>abc</OverviewItem>\r\n          </Overview>\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Price;\r\n","const BASE_URL = `https://api.coinpaprika.com/v1`;\r\n\r\nexport function fetchCoins() {\r\n  return fetch(`${BASE_URL}/coins`).then((response) => response.json());\r\n}\r\n\r\nexport function fetchCoinInfo(coinId: string) {\r\n  return fetch(`${BASE_URL}/coins/${coinId}`).then((response) =>\r\n    response.json()\r\n  );\r\n}\r\nexport function fetchCoinTickers(coinId: string) {\r\n  return fetch(`${BASE_URL}/tickers/${coinId}`).then((response) =>\r\n    response.json()\r\n  );\r\n}\r\nexport function fetchCoinHistory(coinId: string) {\r\n  const endDate = Math.floor(Date.now() / 1000);\r\n  const startDate = endDate - 60 * 60 * 23 * 7 * 2;\r\n\r\n  return fetch(\r\n    `https://ohlcv-api.nomadcoders.workers.dev?coinId=${coinId}&start=${startDate}&end=${endDate}`\r\n  ).then((response) => response.json());\r\n}\r\n","import { useQuery } from \"react-query\";\r\nimport { fetchCoinHistory } from \"../api\";\r\nimport ApexChart from \"react-apexcharts\";\r\n\r\ninterface IHistorical {\r\n  time_open: number;\r\n  time_close: number;\r\n  open: string;\r\n  high: string;\r\n  low: string;\r\n  close: string;\r\n  volume: string;\r\n  market_cap: number;\r\n}\r\n\r\ninterface ChartProps {\r\n  coinId: string;\r\n}\r\n\r\nfunction Chart({ coinId }: ChartProps) {\r\n  const { isLoading, data } = useQuery<IHistorical[]>(\r\n    [\"ohlcv\", coinId],\r\n    () => fetchCoinHistory(coinId),\r\n    {\r\n      refetchInterval: 10000,\r\n    }\r\n  );\r\n  return (\r\n    <div>\r\n      {isLoading ? (\r\n        \"loading chart...\"\r\n      ) : (\r\n        <ApexChart\r\n          type=\"line\"\r\n          series={[\r\n            {\r\n              name: \"Price\",\r\n              data: data?.map((price) => parseFloat(price.close)) ?? [],\r\n            },\r\n          ]}\r\n          options={{\r\n            theme: { mode: \"dark\" },\r\n            chart: {\r\n              height: 500,\r\n              width: 500,\r\n              toolbar: { show: false },\r\n              background: \"transparent\",\r\n            },\r\n            stroke: { curve: \"smooth\", width: 5 },\r\n            grid: { show: false },\r\n            yaxis: { show: false },\r\n            xaxis: {\r\n              labels: { show: false },\r\n              axisTicks: { show: false },\r\n              axisBorder: { show: false },\r\n              type: \"datetime\",\r\n              categories: data?.map((price) => price.time_close),\r\n            },\r\n            fill: {\r\n              type: \"gradient\",\r\n              gradient: { gradientToColors: [\"#0be881\"], stops: [0, 100] },\r\n            },\r\n            colors: [\"#0fbcf9\"],\r\n            tooltip: {\r\n              y: {\r\n                formatter: (value) => `$${value.toFixed(2)}`,\r\n              },\r\n            },\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chart;\r\n","import styled from \"styled-components\";\r\nimport { useQuery } from \"react-query\";\r\nimport {\r\n  Switch,\r\n  Route,\r\n  useLocation,\r\n  useParams,\r\n  useRouteMatch,\r\n} from \"react-router\";\r\nimport Price from \"./Price\";\r\nimport Chart from \"./Chart\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { fetchCoinInfo, fetchCoinTickers } from \"../api\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 10px;\r\n  margin: 0 auto;\r\n  max-width: 480px;\r\n`;\r\n\r\nconst Header = styled.header`\r\n  height: 10vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 48px;\r\n  color: ${(props) => props.theme.accentColor};\r\n`;\r\n\r\nconst Loader = styled.div`\r\n  text-align: center;\r\n`;\r\n\r\nconst Overview = styled.ul`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  background-color: #000;\r\n  border-radius: 8px;\r\n  padding: 8px 10px;\r\n`;\r\nconst OverviewItem = styled.li`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  span:first-child {\r\n    font-size: 10px;\r\n    color: ${(props) => props.theme.textColor};\r\n    margin-bottom: 5px;\r\n    text-transform: uppercase;\r\n  }\r\n`;\r\n\r\nconst Description = styled.p`\r\n  font-size: 16px;\r\n  text-align: left;\r\n  margin: 2rem 0;\r\n  line-height: 1.5rem;\r\n`;\r\n\r\nconst Tabs = styled.ul`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  gap: 10px;\r\n  margin: 20px auto 0;\r\n`;\r\nconst Tab = styled.li<{ isActive: boolean }>`\r\n  background-color: #000;\r\n  width: 50%;\r\n  text-align: center;\r\n  border-radius: 8px;\r\n  color: ${(props) =>\r\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\r\n\r\n  a {\r\n    /* color: ${(props) => props.theme.textColor}; */\r\n    display: block;\r\n    padding: 10px;\r\n    text-transform: uppercase;\r\n  }\r\n`;\r\n\r\ninterface RouteParams {\r\n  coinId: string;\r\n}\r\ninterface RouteState {\r\n  name: string;\r\n}\r\ninterface InfoData {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  is_new: boolean;\r\n  is_active: boolean;\r\n  type: string;\r\n  description: string;\r\n  message: string;\r\n  open_source: boolean;\r\n  started_at: string;\r\n  development_status: string;\r\n  hardware_wallet: boolean;\r\n  proof_type: string;\r\n  org_structure: string;\r\n  hash_algorithm: string;\r\n  first_data_at: string;\r\n  last_data_at: string;\r\n}\r\ninterface PriceData {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  circulating_supply: number;\r\n  total_supply: number;\r\n  max_supply: number;\r\n  beta_value: number;\r\n  first_data_at: string;\r\n  last_updated: string;\r\n  quotes: {\r\n    USD: {\r\n      ath_date: string;\r\n      ath_price: number;\r\n      market_cap: number;\r\n      market_cap_change_24h: number;\r\n      percent_change_1h: number;\r\n      percent_change_1y: number;\r\n      percent_change_6h: number;\r\n      percent_change_7d: number;\r\n      percent_change_12h: number;\r\n      percent_change_15m: number;\r\n      percent_change_24h: number;\r\n      percent_change_30d: number;\r\n      percent_change_30m: number;\r\n      percent_from_price_ath: number;\r\n      price: number;\r\n      volume_24h: number;\r\n      volume_24h_change_24h: number;\r\n    };\r\n  };\r\n}\r\n\r\nfunction Coin() {\r\n  const { coinId } = useParams<RouteParams>();\r\n  const { state } = useLocation<RouteState>();\r\n  const priceMatch = useRouteMatch(\"/:coinId/price\");\r\n  const chartMatch = useRouteMatch(\"/:coinId/chart\");\r\n  const { isLoading: infoLoading, data: infoData } = useQuery<InfoData>(\r\n    [\"info\", coinId],\r\n    () => fetchCoinInfo(coinId)\r\n  );\r\n  const { isLoading: tickersLoading, data: tickersData } = useQuery<PriceData>(\r\n    [\"tickers\", coinId],\r\n    () => fetchCoinTickers(coinId),\r\n    {\r\n      refetchInterval: 5000,\r\n    }\r\n  );\r\n\r\n  const loading = infoLoading || tickersLoading;\r\n\r\n  return (\r\n    <Container>\r\n      <Helmet>\r\n        <title>\r\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\r\n        </title>\r\n      </Helmet>\r\n      <Header>\r\n        <Title>\r\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\r\n        </Title>\r\n      </Header>\r\n      {loading ? (\r\n        <Loader>Loading...</Loader>\r\n      ) : (\r\n        <>\r\n          <Overview>\r\n            <OverviewItem>\r\n              <span>Rank:</span>\r\n              <span>{infoData?.rank}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Symbol:</span>\r\n              <span>{infoData?.symbol}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Price:</span>\r\n              <span>{tickersData?.quotes.USD.price}</span>\r\n            </OverviewItem>\r\n          </Overview>\r\n\r\n          <Description>{infoData?.description}</Description>\r\n\r\n          <Overview>\r\n            <OverviewItem>\r\n              <span>Total Supply:</span>\r\n              <span>{tickersData?.total_supply}</span>\r\n            </OverviewItem>\r\n            <OverviewItem>\r\n              <span>Max Supply:</span>\r\n              <span>{tickersData?.max_supply}</span>\r\n            </OverviewItem>\r\n          </Overview>\r\n\r\n          <Tabs>\r\n            <Tab isActive={chartMatch !== null}>\r\n              <Link to={`/${coinId}/chart`}>Chart</Link>\r\n            </Tab>\r\n            <Tab isActive={priceMatch !== null}>\r\n              <Link to={`/${coinId}/price`}>Price</Link>\r\n            </Tab>\r\n          </Tabs>\r\n\r\n          <Switch>\r\n            <Route path={`/${coinId}/price`}>\r\n              <Price coinId={coinId} />\r\n            </Route>\r\n            <Route path={`/${coinId}/chart`}>\r\n              <Chart coinId={coinId} />\r\n            </Route>\r\n          </Switch>\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Coin;\r\n","import styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useQuery } from \"react-query\";\r\nimport { fetchCoins } from \"../api\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 10px;\r\n  margin: 0 auto;\r\n  max-width: 480px;\r\n`;\r\n\r\nconst Header = styled.header`\r\n  height: 10vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst CoinsList = styled.ul``;\r\n\r\nconst Coin = styled.li`\r\n  background-color: #fff;\r\n  color: ${(props) => props.theme.bgColor};\r\n  margin-bottom: 10px;\r\n  border-radius: 15px;\r\n\r\n  a {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 10px;\r\n    padding: 20px;\r\n    transition: color 0.2s ease-in;\r\n  }\r\n\r\n  &:hover {\r\n    a {\r\n      color: ${(props) => props.theme.accentColor};\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 48px;\r\n  color: ${(props) => props.theme.accentColor};\r\n`;\r\n\r\nconst Loader = styled.div`\r\n  text-align: center;\r\n`;\r\n\r\nconst Img = styled.img`\r\n  width: 40px;\r\n  height: 40px;\r\n`;\r\n\r\ninterface Icoin {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  is_new: boolean;\r\n  is_active: boolean;\r\n  type: string;\r\n}\r\n\r\nfunction Coins() {\r\n  const { isLoading, data } = useQuery<Icoin[]>([\"allCoins\"], fetchCoins);\r\n\r\n  return (\r\n    <Container>\r\n      <Helmet>\r\n        <title>코인</title>\r\n      </Helmet>\r\n      <Header>\r\n        <Title>코인</Title>\r\n      </Header>\r\n      {isLoading ? (\r\n        <Loader>Loading...</Loader>\r\n      ) : (\r\n        <CoinsList>\r\n          {data?.slice(0, 100).map((coin) => (\r\n            <Coin key={coin.id}>\r\n              <Link\r\n                to={{\r\n                  pathname: `/${coin.id}`,\r\n                  state: { name: coin.name },\r\n                }}\r\n              >\r\n                <Img\r\n                  src={`https://coinicons-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}\r\n                />\r\n                {coin.name} &rarr;\r\n              </Link>\r\n            </Coin>\r\n          ))}\r\n        </CoinsList>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Coins;\r\n","import { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport Coin from \"./routes/Coin\";\r\nimport Coins from \"./routes/Coins\";\r\n\r\nfunction Router() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route path=\"/:coinId\">\r\n          <Coin />\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <Coins />\r\n        </Route>\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default Router;\r\n","import { createGlobalStyle } from \"styled-components\";\nimport Router from \"./Router\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color: ${(props) => props.theme.bgColor};\n  color:${(props) => props.theme.textColor}\n}\na {\n  text-decoration:none;\n  color:inherit;\n}\n`;\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <Router />\n      <ReactQueryDevtools initialIsOpen={true} />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { ThemeProvider } from \"styled-components\";\nimport App from \"./App\";\nimport { theme } from \"./theme\";\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import { DefaultTheme } from \"styled-components\";\r\n\r\nexport const theme: DefaultTheme = {\r\n  bgColor: \"#2f3640\",\r\n  textColor: \"#dcdde1\",\r\n  accentColor: \"#9c88ff\",\r\n};\r\n"],"sourceRoot":""}